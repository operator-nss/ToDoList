@use "sass:math";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
//&display=swap - добавить при подключении через плагин
@import url(https://fonts.googleapis.com/css?family=Open+Sans:regular,700&display=swap);
// Подключить если есть локальные файлы шрифтов
@import "fonts/fonts";

// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
// Подключить если есть файл иконочного шрифта
//@import "fonts/icons";

// ============================================================================================================================================================================================================================================================================================================================================================================================
// Настройки шаблона ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: "Open Sans";
$fontSize: rem(18); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$mainColor: #fff; // Цвет шрифта по умолчанию

// Настройки адаптивной сетки ===============================================================================================================================================================================================================================================================================================

// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1170;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 30;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Обнуление ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";

// Стили тега BODY ============================================================================================================================================================================================================================================================================================================================================================================================

body {
   // Скролл заблокирован
   .lock & {
      overflow: hidden;
      touch-action: none;
   }
   // Сайт загружен
   .loaded & {
   }
}

// Оболочка wrapper ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
   min-height: 100%;
   display: flex;
   flex-direction: column;
   overflow: hidden;
   // Прижимаем footer
   > main {
      flex: 1 1 auto;
   }
   // Фикс для слайдеров
   > * {
      min-width: 0;
   }
}
// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {
   // Отзывчивая
   [class*="__container"] {
      @if ($maxWidthContainer>0) {
         max-width: rem($maxWidthContainer);
         box-sizing: content-box;
         margin: 0 auto;
      }
      @if ($containerPadding>0) {
         padding: 0 rem(math.div($containerPadding, 2));
      }
   }
} @else {
   // По брейк-поинтам
   [class*="__container"] {
      margin: 0 auto;
      @if ($maxWidthContainer>0) {
         max-width: rem($maxWidthContainer);
         box-sizing: content-box;
      } @else {
         @if ($containerPadding>0) {
            padding: 0 rem(math.div($containerPadding, 2));
         }
      }
      @media (max-width: $pc) {
         max-width: rem(970);
      }
      @media (max-width: $tablet) {
         max-width: rem(750);
      }
      @media (max-width: $mobile) {
         max-width: none;
         @if ($containerPadding>0 and $maxWidthContainer>0) {
            padding: 0 rem(math.div($containerPadding, 2));
         }
      }
   }
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных  классов
// Для подключения/отключения конкретных стилей смотри base.scss
// @import "base";

// Подключение стилей общих элементов проекта
// Подключение стилей отдельных блоков

h1 {
   font-size: rem(70);
   margin: rem(80) rem(0);
   font-family: "eurofighter";
   font-weight: 800;
   letter-spacing: 0.1em;
   @include adaptiveValue("font-size", 70, 40);
   text-align: center;
   position: relative;
   z-index: 1;
   @media (max-width: $mobile) {
      margin: rem(40) rem(0);
   }
}

.image {
   position: absolute;
   width: 100%;
   height: 100%;
   top: 0;
   left: 0;
   img {
      filter: brightness(0.7);
   }
}

.page {
   text-align: center;
   margin: 0 auto;
   width: 100vw;
   position: relative;
}

h4 {
   padding: 0 30px;
   white-space: nowrap;
   font-size: 20px;
   @media (max-width: em(620)) {
      display: none;
   }
}

.input {
   padding: 9px 20px;
   border-radius: 10px 0px 0px 10px;
   -moz-border-radius: 10px 0px 0px 10px;
   -webkit-border-radius: 10px 0px 0px 10px;
   // width: 600px;
   width: 100%;
   outline: 1px solid #fff;
   &:focus {
      color: #333;
      outline: 1px solid #333;
   }
   @media (max-width: $mobileSmall) {
      padding: 11px 5px;
      font-size: 15px;
   }
}

.button {
   background-color: #047afc;
   padding: 10px 20px;
   border-radius: 0px 10px 10px 0px;
   -moz-border-radius: 0px 10px 10px 0px;
   -webkit-border-radius: 0px 10px 10px 0px;
   transition: background-color 0.3s ease 0s;

   @media (any-hover: hover) {
      &:hover {
         background-color: #1504fc;
      }
   }
}

.todo {
   position: relative;
   z-index: 2;
   margin: 50px auto;
   max-width: 1000px;
   text-align: left;
   padding: rem(0) rem(20);
   @media (max-width: $mobileSmall) {
      padding: rem(0) rem(10);
   }
   // .todo__form

   &__form {
      width: 100%;
      display: flex;
      align-items: center;
      margin: rem(0) rem(0) rem(40) rem(0);
   }

   // .todo__list

   &__list {
      width: 100%;
      padding: rem(0) rem(40);
      @media (max-width: $mobile) {
         padding: rem(0) rem(0);
      }
   }

   // .todo__item

   &__item {
      display: flex;
      align-items: center;
      position: relative;
      &.completed {
         opacity: 0.5;
         text-decoration: line-through;
         transition: all 0.5s;
      }
      &:not(:last-child) {
         margin-bottom: rem(30);
      }
      &::after {
         content: "";
         width: 100%;
         height: 2px;
         background-color: #fff;
         position: absolute;
         opacity: 0.5;
         left: 0;
         bottom: -8px;
      }
      @media (max-width: $mobile) {
         flex-direction: column;
      }
   }

   // .todo__description

   &__description {
      flex: 1 1 100%;
      @media (max-width: $mobile) {
         margin: rem(0) rem(0) rem(15) rem(0);
      }
   }

   // .todo__actions

   &__actions {
      display: flex;
      align-items: center;
   }

   // .todo__date

   &__date {
      padding: rem(0) rem(30);
      white-space: nowrap;
   }

   // .todo__buttons

   &__buttons {
      display: flex;
      @media (max-width:$mobileSmall){
          flex-direction: column;
      }
   }

   // .todo__button

   &__button {
      padding: rem(5) rem(10);
      border-radius: 5px;
      width: 90px;
      @media (max-width:$mobileSmall){
         &:not(:last-child) {margin-bottom: rem(10);}
      }


   }

   // .todo__done

   &__done {
      background-color: #33c04f;
      transition: background-color 0.3s ease 0s;
      margin: rem(0) rem(10) rem(0) rem(0);

      @media (any-hover: hover) {
         &:hover {
            background-color: #1c8030;
         }
      }
   }

   // .todo__delete

   &__delete {
      background-color: #d23547;
      transition: background-color 0.3s ease 0s;

      @media (any-hover: hover) {
         &:hover {
            background-color: #a12231;
         }
      }
   }
}
